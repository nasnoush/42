/*void	actualisation_deplacement(t_assets *assets, int new_x, int new_y)
{
	char	next_pos;

	if (!assets || !assets->map)
		return ;
	if (new_y >= 0 && new_y < count_line(assets->map)
		&& new_x >= 0
		&& new_x < (int)ft_strlen(assets->map[new_y]))
	{
		next_pos = assets->map[new_y][new_x];
		if (next_pos == '1')
			return ;
		if (next_pos == 'E' && assets->collectible > 0)
			return ;
		if (next_pos == '0' || next_pos == 'C')
		{
			assets->map[assets->pos_y][assets->pos_x] = '0';
			if (next_pos == 'C')
				assets->collectible--;
			assets->map[new_y][new_x] = 'P';
			assets->pos_x = new_x;
			assets->pos_y = new_y;
			assets->count_moove++;
			aff_moove(assets, assets->mlx, assets->window);
			ft_printf("Nombre de mouvement : %d\n", assets->count_moove);
			actualisation_map(assets, assets->mlx, assets->window);
		}
		if (next_pos == 'E' && assets->collectible == 0)
		{
			aff_end_screen(assets->mlx, assets->window);   // ici modifier pour que sa fonctionne bien
			ft_printf("Bien joué !\nTu as effectué %d mouvements\n",
				assets->count_moove);
			mlx_destroy_window(assets->mlx, assets->window);
			free_map(assets->map);
			free(assets);
			exit(0);
		}
	}
}*/